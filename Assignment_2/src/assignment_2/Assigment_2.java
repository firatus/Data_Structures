package assignment_2;

import Assignment_2.Binary_Tree;
import Assignment_2.Levenshtein_Distance;
import static Assignment_2.Levenshtein_Distance.compute_Levenshtein_distanceDP;
import Assignment_2.Node;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Scanner;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Tetar_
 */
public class Assigment_2 extends javax.swing.JFrame {

    /**
     * Creates new form text_supporter
     */
    public Assigment_2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        user_input = new javax.swing.JTextField();
        auto_complete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggest_list = new javax.swing.JTextArea();
        suggest_bt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        k_counter = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        user_input.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                user_inputMouseMoved(evt);
            }
        });
        user_input.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                user_inputMouseWheelMoved(evt);
            }
        });
        user_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                user_inputMousePressed(evt);
            }
        });
        user_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_inputActionPerformed(evt);
            }
        });

        auto_complete.setText("Auto Complete");
        auto_complete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auto_completeActionPerformed(evt);
            }
        });

        jScrollPane1.setWheelScrollingEnabled(false);

        suggest_list.setColumns(20);
        suggest_list.setRows(5);
        jScrollPane1.setViewportView(suggest_list);

        suggest_bt.setText("Suggestions");
        suggest_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggest_btActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Suggestion List");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("TEXT:");

        k_counter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("K:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(user_input, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k_counter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suggest_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(auto_complete, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 261, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(auto_complete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(user_input, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(k_counter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(suggest_bt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void user_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_inputActionPerformed

    /* 
    Kullanıcın girdiği cümlede her kelime için binary search tree oluşturulur.
    Distance değeri 0 ise kelime olduğu gibi yazılır
    0 değil ise binary search treede distance değeri en düşük olan nodelardan en allta bulunan node yazdırılır.
    
    
    
    
     */
    private void auto_completeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_auto_completeActionPerformed
        // TODO add your handling code here:

        String text = user_input.getText();
// Birden fazla boşluk olursa
        String[] words = text.split("\\s+");
        StringBuilder sb = new StringBuilder();

        for (String word : words) {
            Binary_Tree tree = new Binary_Tree();

            boolean correct_word = false;

            try {
                InputStream inputStream = getClass().getResourceAsStream("/Assignment_2/words3.txt");
                BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
                String data = reader.readLine();
                while (data != null) {
                    int distance = compute_Levenshtein_distanceDP(word.toLowerCase(), data);
                    if (distance == 0) {
                        correct_word = true;
                        break;
                    } else {
                        tree.insert(distance, data);
                    }
                    data = reader.readLine();
                }
                reader.close();
                inputStream.close();
            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }

            if (correct_word) {
                sb.append(word).append("\n");
            } else {
                Binary_Tree suggest_tree = tree.search();
                Node temp = suggest_tree.root;
                sb.append(temp.word).append("\n");
            }
        }

        user_input.setText(sb.toString());


    }//GEN-LAST:event_auto_completeActionPerformed

    /*
    Distance değeri aynı olan nodelar(0 dışında) ayrı bir binary search treede tutulur.
    Ayrı tutulan bu treedeki tüm nodelar, önerilen kelimer adlı textareda gösterilir
     */
    private void suggest_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggest_btActionPerformed
        // TODO add your handling code here:
        suggest_list.setText("");

String text = user_input.getText();

String[] words = text.split("\\s+");

if (text.length() != 0) {
    for (String word : words) {
        Binary_Tree tree = new Binary_Tree();

        try {
            InputStream inputStream = getClass().getResourceAsStream("/Assignment_2/words3.txt");
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            String data = reader.readLine();
            while (data != null) {
                int distance = compute_Levenshtein_distanceDP(word.toLowerCase(), data);
                tree.insert(distance, data);
                data = reader.readLine();
            }
            reader.close();
            inputStream.close();

        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }

        Binary_Tree suggest_tree = tree.search();
        Node temp = suggest_tree.root;
        if (temp.distance != 0) {
            suggest_list.append(word + " kelimesi için öneriler:\n");
            int k = (int) k_counter.getValue();
            System.out.println(k);
            while (temp != null && k != 0) {
                System.out.println(temp.word);
                suggest_list.append(temp.word + "\n");
                temp = temp.left;
                k--;
            }
        }

    }

}

    }//GEN-LAST:event_suggest_btActionPerformed

    private void user_inputMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_inputMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_user_inputMouseMoved

    private void user_inputMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_user_inputMouseWheelMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_user_inputMouseWheelMoved

    private void user_inputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_inputMousePressed
        // TODO add your handling code here:


    }//GEN-LAST:event_user_inputMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assigment_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assigment_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assigment_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assigment_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assigment_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton auto_complete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner k_counter;
    private javax.swing.JButton suggest_bt;
    private javax.swing.JTextArea suggest_list;
    private javax.swing.JTextField user_input;
    // End of variables declaration//GEN-END:variables
}
